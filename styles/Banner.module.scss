@import './Colors.module';

@import url("https://fonts.cdnfonts.com/css/hussar-4");

.name,
.title,
.githubLink {
  font-family: "Hussar", sans-serif;
}

.banner {
  display: flex;
  justify-content: center;
  padding: 0px;
}


.blueCard {
  position: absolute;
  top: 0px; // Slightly offset to show behind the profile card
  left: 19%; // More offset to allow space for a third card
  width: calc(100% - 60px); // Width slightly less than the profile card

  height: 414px;
  border-radius: 20px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  padding: 20px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 0; // Behind the profile card

  display: grid;
  grid-template-columns: 25px 3px 5fr; // 3 columns: squares, line, code lines art
  grid-gap: 16px; // Space between the columns
  align-items: center; // Center the items vertically
  > * {
    max-height: 100%;
    overflow: hidden; // Prevent content from expanding beyond the set height
  }
}

.yellowSquares {
  display: grid;
  grid-template-rows: repeat(12, 1fr); // 12 rows for the squares
  gap: 5px;
  height: 100%; // Adjust height to fill the blueCard height
  align-content: start; // Align the squares to the top
}

.yellowSquare {

  width: 18px;
  height: 18px; 
  margin: 5px;
}

.verticalLine {

  width: 5px; // Full width of the column
  height: 100%; // Full height of the card
  margin-left: 0px;
}

.codeLinesArt {
  display: grid;
  grid-auto-rows: minmax(10px, auto); // Adjust the min-height for each code line to match the wireframe
  gap: 5px; // Adjust the gap to match the wireframe
  align-items: flex-start;
  padding-left: 10px; // Padding to simulate indentation
}

// Adjusting .codeLine to replicate the pattern of code lines from the wireframe
.codeLine {
  height: 8px; // Adjust height to match the wireframe
  margin-bottom: 5px; // Adjust the margin to create space between lines
  width: 100%; // Set default width to full container width

  // Override widths for specific lines to match the wireframe
  &:nth-child(1) { width: 50vh; }
  &:nth-child(2) { width: 45vh; }
  &:nth-child(3) { width: 40vh; }
  // Continue for each line, adjusting the width to match the wireframe
}

.codeIcon {
  margin-top: 0px;
  align-self: top;
}

// profile card and text
.profileCard {
  border-radius: 20px 0 0 20px;
  padding: 42px;
  margin: auto 0px auto auto;
  padding-top: 60px;
  text-align: center;
  max-width: 873px;
  width: 100%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  position: relative; // Added to position the top banner absolutely at the top

  .topBanner {
    position: absolute;
    top: 0;
    left: 0; // Align to the left edge of profile-card
    right: 0; // Align to the right edge of profile-card
    border-radius: 20px 20px 0 0; // Rounded corners on top

    display: grid;
    gap: 8px;
    align-items: center;
    padding: 12px;
    box-sizing: border-box; // Make sure padding is included in the width
    z-index: 1;
    width: 100%;
  }

  .name {
    margin-bottom: 0.25em;
  }

  .title {
    margin-bottom: 0.5em;
  }

  .githubLink {
    text-decoration: none;
    font-size: 28px;
    &:hover {
      text-decoration: underline;
    }
  }
}

// top banner
.topBanner {
  // Use a 4-column layout to accommodate the traffic lights, control buttons, search bar, and stacked dots
  display: grid;
  grid-template-columns: auto auto 1fr auto; // Define four columns
  align-items: center;
  padding: 12px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%; // Make sure the top banner covers the entire width
  border-radius: 20px 20px 0 0;
  z-index: 1; // Ensure the z-index is high enough

  .trafficLights {
    display: flex;
    gap: 4px;

    .trafficDot {
      height: 12px;
      width: 12px;
      border-radius: 50%;
    }
  }

  .searchBar {
    display: flex;
    align-items: center;

    border-radius: 18px;
    padding: 4px 13px;
    flex-grow: 1; // Search bar takes up remaining space

    input {
      flex-grow: 1; // Input field takes up available space
      width: 42rem;
      border: none;
      background: none;
      outline: none;
      padding-right: 10px;
    }

  }

  .controlButtons {
    display: flex;
    gap: 4px;

    .controlBtn {

      border: 1px solid #ddd;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }
  .stackedDots {
    display: grid; // Change to grid layout for proper alignment
    grid-template-rows: repeat(3, 1fr); // Create three rows for the dots
    gap: 4px;

    .dot {
      height: 4px;
      width: 4px;

      border: 1px solid #ddd;
      border-radius: 50%;
    }
  }
}



.rainbowGrid {
  display: grid;
  grid-template-columns: repeat(13, 1fr);
  grid-gap: 10px;
  padding: 10px;
  border-radius: 20px;
  margin: 20px 0px auto auto;


  .gridSquare {
    min-height: 50px;
    width: 50px;
    border-radius: 5px;
  }

  // Create squares
  @for $i from 0 through 38 {

    $row: floor($i / 13) + 1; // determine row number
    $lightenAmount: ($row - 1) * 25%; // amount to lighten by row

    .gridSquare:nth-child(#{$i + 1}) {
      height: 20px;
      border-radius: 5px;

    }
  }
}

// ... rest of your components
