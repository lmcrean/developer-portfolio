// Note: This is a partial SCSS file, not a full SCSS file
// This is the generic structure of the Main Banner as well as the general profile card


// profile card and text
.profileCard {
  border-radius: 20px;
  padding: 42px;
  margin: auto auto auto auto;
  padding-top: 60px;
  text-align: center;
  max-width: 873px;
  width: 100%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  position: relative; // Added to position the top banner absolutely at the top

  @media screen and (max-width: 920px){
    max-width: 100%;
  }

  .topBanner {
    position: absolute;
    top: 0;
    left: 0; // Align to the left edge of profile-card
    right: 0; // Align to the right edge of profile-card
    border-radius: 20px 20px 0 0; // Rounded corners on top
    display: grid;
    gap: 8px;
    align-items: center;
    padding: 12px;
    box-sizing: border-box; // Make sure padding is included in the width
    z-index: 1;
    width: 100%;
  }

  .name {
    margin-bottom: 0.25em;
    font-size: 34px;
  }

  .title {
    margin-bottom: 0.5em;
  }

  .githubLink {
    text-decoration: none;
    font-size: 28px;
    &:hover {
      text-decoration: underline;
    }
    @media screen and (max-width: 389px){
      font-size: 18px;
    }
  }
}

// top banner
.topBanner {
  // Use a 4-column layout to accommodate the traffic lights, control buttons, search bar, and stacked dots
  display: grid;
  grid-template-columns: auto auto 1fr auto; // Define four columns
  align-items: center;
  padding: 12px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%; // Make sure the top banner covers the entire width
  border-radius: 20px 20px 0 0;
  z-index: 1; // Ensure the z-index is high enough

  @media screen and (max-width: 920px){
    display: none;
  }

  .trafficLights {
    display: flex;
    gap: 4px;

    .trafficDot {
      height: 12px;
      width: 12px;
      border-radius: 50%;
    }
  }

  .searchBar {
    display: flex;
    align-items: center;

    border-radius: 18px;
    padding: 4px 13px;
    flex-grow: 1; // Search bar takes up remaining space

    input {
      flex-grow: 1; // Input field takes up available space
      width: 42rem;
      border: none;
      background: none;
      outline: none;
      padding-right: 10px;
    }

    @media screen and (max-width: 920px){
      display: none;
    }

  }

  .controlButtons {
    display: flex;
    gap: 4px;

    @media screen and (max-width: 920px){
      display: none;
    }

    .controlBtn {

      border: 1px solid #ddd;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      display: flex;
      justify-content: center;
      align-items: center;
      
      
    }
  }
  .stackedDots {
    display: grid; // Change to grid layout for proper alignment
    grid-template-rows: repeat(3, 1fr); // Create three rows for the dots
    gap: 4px;

    @media screen and (max-width: 920px){
      display: none;
    }

    .dot {
      height: 4px;
      width: 4px;

      border: 1px solid #ddd;
      border-radius: 50%;
    }
  }
}



.rainbowGrid {
  display: grid;
  grid-template-columns: repeat(13, 1fr);
  grid-gap: 10px;
  padding: 10px;
  border-radius: 20px;
  margin: 20px 0px auto auto;

  .gridSquare {
    min-height: 50px;
    width: 50px;
    border-radius: 5px;

    @media screen and (max-width: 920px){
      display: none;
    }
  }

  // Create squares
  @for $i from 0 through 38 {

    $row: floor($i / 13) + 1; // determine row number
    $lightenAmount: ($row - 1) * 25%; // amount to lighten by row

    .gridSquare:nth-child(#{$i + 1}) {
      height: 20px;
      border-radius: 5px;

    }
  }
}

// ... rest of your components
