name: Deploy Main Production (Single-Server)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  checks: write

jobs:
  deploy-web:
    uses: ./.github/workflows/deploy-web-main.yml
    secrets: inherit

  test-static:
    needs: deploy-web
    uses: ./.github/workflows/test-static.yml
    secrets: inherit
    with:
      web_url: ${{ needs.deploy-web.outputs.deployment_url }}

  test-e2e:
    needs: [deploy-web, test-static]
    if: needs.test-static.result == 'success'
    uses: ./.github/workflows/test-main-e2e.yml
    secrets: inherit
    with:
      web_url: ${{ needs.deploy-web.outputs.deployment_url }}
      api_url: ${{ needs.deploy-web.outputs.deployment_url }}  # Same origin for fallback

  deployment-summary:
    needs: [deploy-web, test-static, test-e2e]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: üìä Log Deployment Summary
        run: |
          echo "=== üöÄ SINGLE-SERVER PRODUCTION DEPLOYMENT SUMMARY ==="
          echo "Web URL: ${{ needs.deploy-web.outputs.deployment_url }}"
          echo "Static Data Tests: ${{ needs.test-static.result }}"
          echo "E2E Tests: ${{ needs.test-e2e.result }}"
          echo "Web Deployment: ${{ needs.deploy-web.result }}"
          
          # Determine overall status
          static_success="${{ needs.test-static.result == 'success' }}"
          e2e_success="${{ needs.test-e2e.result == 'success' }}"
          web_deploy_success="${{ needs.deploy-web.result == 'success' }}"
          
          if [ "$static_success" = "true" ] && [ "$e2e_success" = "true" ] && [ "$web_deploy_success" = "true" ]; then
            echo "‚úÖ SINGLE-SERVER PRODUCTION DEPLOYMENT SUCCESSFUL!"
            echo "üöÄ Static data architecture working perfectly!"
          else
            echo "‚ö†Ô∏è SOME PRODUCTION DEPLOYMENTS FAILED"
            echo "Static Tests: $static_success"
            echo "E2E Tests: $e2e_success" 
            echo "Web Deploy: $web_deploy_success"
            exit 1
          fi 