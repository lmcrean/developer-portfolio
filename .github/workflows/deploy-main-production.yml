name: Deploy Main Production (Single-Server)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  checks: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deployment_url: ${{ steps.set_url.outputs.deployment_url }}
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      
      - name: 🔧 Generate Static Data
        env:
          GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          GITHUB_USERNAME: lmcrean
        run: |
          chmod +x .github/workflows/scripts/generate-static-data.sh
          ./.github/workflows/scripts/generate-static-data.sh
      
      - name: 🏗️ Prepare Web App
        run: |
          chmod +x .github/workflows/scripts/deploy-web.sh
          ./.github/workflows/scripts/deploy-web.sh main
      
      - name: 🔐 Deploy to Firebase (Main)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LAURIECREAN_FREE_38256 }}
          projectId: lauriecrean-free-38256
          channelId: live
          entryPoint: apps/web
        id: deploy
      
      - name: 🔗 Set Deployment URL
        id: set_url
        run: |
          DETAILS_URL="${{ steps.deploy.outputs.details_url }}"
          URLS_OUTPUT="${{ steps.deploy.outputs.urls }}"
          
          if [[ -n "$DETAILS_URL" && "$DETAILS_URL" != "null" ]]; then
            DEPLOYMENT_URL="$DETAILS_URL"
          elif [[ -n "$URLS_OUTPUT" && "$URLS_OUTPUT" != "null" ]]; then
            DEPLOYMENT_URL=$(echo "$URLS_OUTPUT" | head -n1 | sed 's/,.*$//')
          else
            DEPLOYMENT_URL="https://lauriecrean-free-38256.web.app"
          fi
          
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "🌐 Deployment URL: $DEPLOYMENT_URL"
      
      - name: 🌐 Test Static Data
        run: |
          chmod +x .github/workflows/scripts/test-static-data.sh
          ./.github/workflows/scripts/test-static-data.sh "${{ steps.set_url.outputs.deployment_url }}"
      
      - name: 🧪 Run E2E Tests
        run: |
          chmod +x .github/workflows/scripts/run-e2e-tests.sh
          ./.github/workflows/scripts/run-e2e-tests.sh "${{ steps.set_url.outputs.deployment_url }}"
        continue-on-error: true
      
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results-main
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 30
      
      - name: 🎯 Deployment Summary
        run: |
          echo "🎯 Single-Server Production Deployment Complete!"
          echo "📍 Web URL: ${{ steps.set_url.outputs.deployment_url }}"
          echo "✅ Static data generation validated"
          echo "✅ Static data serving validated" 
          echo "✅ E2E tests executed"
          echo "🚀 Single-server architecture working perfectly!"