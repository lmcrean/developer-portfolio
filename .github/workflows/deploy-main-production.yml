name: Deploy Main Production (Single-Server)

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      trigger_source:
        description: 'Source that triggered this deployment'
        required: false
        default: 'manual'
        type: string
      update_reason:
        description: 'Reason for update (from scheduled workflow)'
        required: false
        type: string

permissions:
  contents: read
  deployments: write
  checks: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deployment_url: ${{ steps.set_url.outputs.deployment_url }}
    
    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      
      - name: 🔧 Generate Static Data
        env:
          GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
          GITHUB_USERNAME: lmcrean
        run: |
          chmod +x .github/workflows/scripts/generate-static-data.sh
          ./.github/workflows/scripts/generate-static-data.sh
      
      - name: 📁 Copy Static Data to Web App
        run: |
          chmod +x .github/workflows/scripts/copy-static-data.sh
          ./.github/workflows/scripts/copy-static-data.sh
      
      - name: ✅ Validate Static JSON Files
        run: |
          chmod +x .github/workflows/scripts/validate-static-json.sh
          ./.github/workflows/scripts/validate-static-json.sh
      
      - name: 🏗️ Prepare Web App
        run: |
          chmod +x .github/workflows/scripts/deploy-web.sh
          ./.github/workflows/scripts/deploy-web.sh main
      
      - name: 🔐 Deploy to Firebase (Main)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LAURIECREAN_FREE_38256 }}
          projectId: lauriecrean-free-38256
          channelId: live
          entryPoint: apps/web
        id: deploy
        timeout-minutes: 15
      
      - name: 🔗 Set Deployment URL
        id: set_url
        run: |
          DEPLOYMENT_URL="${{ steps.deploy.outputs.details_url }}"
          
          # Fallback to default production URL if deploy output is empty
          if [[ -z "$DEPLOYMENT_URL" || "$DEPLOYMENT_URL" == "null" ]]; then
            DEPLOYMENT_URL="https://lauriecrean-free-38256.web.app"
          fi
          
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "🌐 Production Deployment URL: $DEPLOYMENT_URL"
      
      - name: 🌐 Test Static Data
        run: |
          chmod +x .github/workflows/scripts/test-static-data.sh
          echo "🔍 Testing static data availability on production deployment..."
          ./.github/workflows/scripts/test-static-data.sh "${{ steps.set_url.outputs.deployment_url }}"
        timeout-minutes: 10
      
      - name: 🧪 Run E2E Tests
        run: |
          chmod +x .github/workflows/scripts/run-e2e-tests.sh
          echo "🎯 Starting E2E tests for production deployment..."
          ./.github/workflows/scripts/run-e2e-tests.sh "${{ steps.set_url.outputs.deployment_url }}"
          echo "✅ E2E tests passed successfully"
        timeout-minutes: 20
      
      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results-main
          path: |
            e2e/test-results/
            e2e/playwright-report/
          retention-days: 30
      
      - name: 🎯 Deployment Summary
        run: |
          echo "🎯 Single-Server Production Deployment Complete!"
          echo "📍 Web URL: ${{ steps.set_url.outputs.deployment_url }}"
          
          # Show trigger source if provided
          if [ "${{ github.event.inputs.trigger_source }}" = "scheduled" ]; then
            echo "🕐 Triggered by: Scheduled Update"
            echo "💡 Update Reason: ${{ github.event.inputs.update_reason }}"
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "🔄 Triggered by: Push to main branch"
          else
            echo "👤 Triggered by: Manual workflow dispatch"
          fi
          
          echo "✅ Static data generation validated"
          echo "✅ Static data serving validated" 
          echo "✅ E2E tests executed"
          echo "🚀 Single-server architecture working perfectly!"